{
  "db_name": "PostgreSQL",
  "query": "SELECT\n  json_agg(artist_data) AS \"items: Json<Vec<Artist>>\"\nFROM (\n    SELECT\n        artist.gid AS Id,\n        array(\n            SELECT gid\n            FROM artist_gid_redirect\n            WHERE artist_gid_redirect.new_id = artist.id\n        ) AS OldIds,\n        artist.name AS ArtistName,\n        artist.sort_name AS SortName,\n        array(\n            SELECT name\n            FROM artist_alias\n            WHERE artist_alias.artist = artist.id\n              AND (artist_alias.type IS NULL OR artist_alias.type = 1)\n        ) AS ArtistAliases,\n        CASE WHEN artist.ended THEN 'ended' ELSE 'active' END AS Status,\n        artist.comment AS Disambiguation,\n        artist_type.name AS Type,\n        json_build_object(\n            'Count', COALESCE(artist_meta.rating_count, 0),\n            'Value', artist_meta.rating::decimal / 10\n        ) AS Rating,\n        array(\n            SELECT url.url\n            FROM url\n            JOIN l_artist_url ON l_artist_url.entity0 = artist.id\n                              AND l_artist_url.entity1 = url.id\n        ) AS Links,\n        array(\n            SELECT INITCAP(genre.name)\n            FROM genre\n            JOIN tag ON genre.name = tag.name\n            JOIN artist_tag ON artist_tag.tag = tag.id\n            WHERE artist_tag.artist = artist.id\n              AND artist_tag.count > 0\n        ) AS Genres,\n        (\n            SELECT json_agg(album_data)\n            FROM (\n                SELECT\n                    release_group.gid AS Id,\n                    array(\n                        SELECT gid\n                        FROM release_group_gid_redirect\n                        WHERE release_group_gid_redirect.new_id = release_group.id\n                    ) AS OldIds,\n                    release_group.name AS Title,\n                    COALESCE(release_group_primary_type.name, 'Other') AS Type,\n                    array(\n                        SELECT name\n                        FROM release_group_secondary_type rgst\n                        JOIN release_group_secondary_type_join rgstj\n                          ON rgstj.secondary_type = rgst.id\n                        WHERE rgstj.release_group = release_group.id\n                        ORDER BY name ASC\n                    ) AS SecondaryTypes,\n                    COALESCE(\n                        make_date(\n                            release_group_meta.first_release_date_year,\n                            release_group_meta.first_release_date_month,\n                            release_group_meta.first_release_date_day\n                        ),\n                        make_date(\n                            COALESCE(release_group_meta.first_release_date_year, 1),\n                            COALESCE(release_group_meta.first_release_date_month, 1),\n                            COALESCE(release_group_meta.first_release_date_day, 1)\n                        )\n                    ) AS ReleaseDate,\n                    (\n                        SELECT COALESCE(json_agg(DISTINCT release_status.name), '[]'::json)\n                        FROM release\n                        JOIN release_status ON release_status.id = release.status\n                        WHERE release.release_group = release_group.id\n                    ) AS ReleaseStatuses,\n                    json_build_object(\n                        'Count', COALESCE(release_group_meta.rating_count, 0),\n                        'Value', release_group_meta.rating::decimal / 10\n                    ) AS Rating\n                FROM release_group\n                LEFT JOIN release_group_meta\n                  ON release_group_meta.id = release_group.id\n                LEFT JOIN release_group_primary_type\n                  ON release_group.type = release_group_primary_type.id\n                LEFT JOIN artist_credit_name\n                  ON artist_credit_name.artist_credit = release_group.artist_credit\n                WHERE artist_credit_name.artist = artist.id\n                  AND artist_credit_name.position = 0\n                ORDER BY release_group.gid\n            ) album_data\n        ) AS Albums\n    FROM artist\n    LEFT JOIN artist_type ON artist.type = artist_type.id\n    LEFT JOIN artist_meta ON artist.id = artist_meta.id\n    WHERE artist.gid > $1\n    ORDER BY artist.gid\n    LIMIT $2\n) artist_data;\n",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "items: Json<Vec<Artist>>",
        "type_info": "Json"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "Int8"
      ]
    },
    "nullable": [
      null
    ]
  },
  "hash": "f23478e072c9e865d158115422ebc0dc5abfe54dcaa58b5039c400303df9950f"
}
